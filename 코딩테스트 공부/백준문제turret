
//a좌표 (x1, y1)와 b좌표 (x2, y2)가 주어지고,
//a가 계산한 목표까지의 거리 r1과 b가 계산한 목표까지의 거리 r2가 주어졌을 때,
// 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.
// 입력
// 첫째 줄에 테스트 케이스의 개수 T가 주어진다.
// 각 테스트 케이스는 다음과 같이 이루어져 있다.
//  한 줄에 x1, y1, r1, x2, y2, r2가 주어진다.
//  x1, y1, x2, y2는 -10,000보다 크거나 같고,
//  10,000보다 작거나 같은 정수이고,
//  r1, r2는 10,000보다 작거나 같은 자연수이다.
//  출력
//  각 테스트 케이스마다 목표물이 있을 수 있는 위치의 수를 출력한다.
//  목표물이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.
import java.util.Scanner;
public class main {
    public static void main(String[] args) {
        int tcnt, x1, x2, y1, y2, r1, r2;
        Scanner scanner = new Scanner(System.in);
        tcnt = scanner.nextInt();
        for (int i = 0; i < tcnt; i++) {
            x1 = checkb(scanner.nextInt());
            y1 = checkb(scanner.nextInt());
            r1 = checkb(scanner.nextInt());
            x2 = checkb(scanner.nextInt());
            y2 = checkb(scanner.nextInt());
            r2 = checkb(scanner.nextInt());
            System.out.printf("test %d\n", (i + 1));
            System.out.printf("%d,%d,%d,%d,%d,%d\n", x1, y1, r1, x2, y2, r2);
            System.out.println(calc(x1, y1, r1, x2, y2, r2));
        }
    }

    public static int calc(int x1, int y1, int r1, int x2, int y2, int r2) {
        int result=2;
        if (x1 == x2 && y1 == y2 && r1 == r2) {
            result= -1;
        }else if(x1 == x2 && y1 == y2 && r1 != r2){
            result=0;
        }else if(distance(x1,x2,y1,y2)==doub(r1-r2)||
                distance(x1,x2,y1,y2)==doub(r1+r2)){
            result=1;
        }else if(distance(x1,x2,y1,y2)<doub(r1+r2)){
            System.out.println("wrong example");
        }
        return result;
    }

    public static int distance(int a, int b, int c, int d) {
        return doub(a-b) +doub(c-d);
    }
    public static  int doub(int a){
        return a*a;
    }
    public static int checkb(int a){
        if(a<-10000||(10000<a)){
            System.out.println("Boundary-out");
        }
        return a;
    }

}

